{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/pratik/code-linux/image-converter/src/components/HydrationProvider.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect } from 'react';\n\n/**\n * Component to handle hydration mismatches caused by browser extensions\n * that modify the DOM after React hydrates (like password managers, accessibility tools, etc.)\n */\nexport default function HydrationProvider({ children }: { children: React.ReactNode }) {\n  useEffect(() => {\n    // Suppress hydration warnings for known browser extension attributes\n    const originalError = console.error;\n    console.error = (...args) => {\n      const message = args[0];\n      if (\n        typeof message === 'string' &&\n        (message.includes('cz-shortcut-listen') ||\n         message.includes('data-lastpass-') ||\n         message.includes('data-1password-') ||\n         message.includes('data-bitwarden-') ||\n         message.includes('hydration failed') && message.includes('browser extension'))\n      ) {\n        // Suppress these specific hydration warnings from browser extensions\n        return;\n      }\n      originalError.apply(console, args);\n    };\n\n    return () => {\n      console.error = originalError;\n    };\n  }, []);\n\n  return <>{children}</>;\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAQe,SAAS,kBAAkB,EAAE,QAAQ,EAAiC;IACnF,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,qEAAqE;QACrE,MAAM,gBAAgB,QAAQ,KAAK;QACnC,QAAQ,KAAK,GAAG,CAAC,GAAG;YAClB,MAAM,UAAU,IAAI,CAAC,EAAE;YACvB,IACE,OAAO,YAAY,YACnB,CAAC,QAAQ,QAAQ,CAAC,yBACjB,QAAQ,QAAQ,CAAC,qBACjB,QAAQ,QAAQ,CAAC,sBACjB,QAAQ,QAAQ,CAAC,sBACjB,QAAQ,QAAQ,CAAC,uBAAuB,QAAQ,QAAQ,CAAC,oBAAoB,GAC9E;gBACA,qEAAqE;gBACrE;YACF;YACA,cAAc,KAAK,CAAC,SAAS;QAC/B;QAEA,OAAO;YACL,QAAQ,KAAK,GAAG;QAClB;IACF,GAAG,EAAE;IAEL,qBAAO;kBAAG;;AACZ","debugId":null}}]
}